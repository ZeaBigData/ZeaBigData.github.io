servr::httd()
install.packages('servr', repos = 'http://yihui.name/xran')  # devel version
install.packages("servr", repos = "http://yihui.name/xran")
jekyll()
library(servr)
jekyll()
?jekyll
?Sys.getenv('USER')
Sys.getenv('USER') == 'yangjl'
Sys.getenv('USER') == 'jyang'
baseurl = servr:::jekyll_config('.', 'baseurl', '/')
baseurl
baseurl
fig.path
knitr::opts_chunk$set(
fig.path   = sprintf('/figure/%s/', d),
cache.path = sprintf('cache/%s/', d)
)
# input/output filenames are passed as two additional arguments to Rscript
a = commandArgs(TRUE)
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
knitr::opts_chunk$set(
fig.path   = sprintf('/figure/%s/', d),
cache.path = sprintf('cache/%s/', d)
)
sprintf('/figure/%s/', d)
local({
# fall back on '/' if baseurl is not specified
baseurl = servr:::jekyll_config('.', 'baseurl', '/')
knitr::opts_knit$set(base.url = baseurl)
# fall back on 'kramdown' if markdown engine is not specified
markdown = servr:::jekyll_config('.', 'markdown', 'kramdown')
# see if we need to use the Jekyll render in knitr
if (markdown == 'kramdown') {
knitr::render_jekyll()
} else knitr::render_markdown()
# input/output filenames are passed as two additional arguments to Rscript
a = commandArgs(TRUE)
d = gsub('^_|[.][a-zA-Z]+$', '', a[1])
knitr::opts_chunk$set(
fig.path   = sprintf('/figure/%s/', d),
cache.path = sprintf('cache/%s/', d)
)
# set where you want to host the figures (I store them in my Dropbox Public
# folder, and you might prefer putting them in GIT)
if (Sys.getenv('USER') == 'yihui') {
# these settings are only for myself, and they will not apply to you, but
# you may want to adapt them to your own website
knitr::opts_chunk$set(fig.path = sprintf('%s/', gsub('^.+/', '', d)))
knitr::opts_knit$set(
base.dir = '~/Dropbox/Public/jekyll/',
base.url = 'http://db.yihui.name/jekyll/'
)
}
knitr::opts_knit$set(width = 70)
knitr::knit(a[1], a[2], quiet = TRUE, encoding = 'UTF-8', envir = .GlobalEnv)
})
?servr:::jekyll_config
?jekyll_config
library(servr)
?jekyll_config
??jekyll_config
sprintf('/figure/%s/', d)
baseurl = servr:::jekyll_config('.', 'baseurl', '/')
baseurl
library(lme4)
#make data frame
t_line=c(rep("b73",3),rep("lux",3)) #line names
t_g=c(5.87,5.99,6.02,9.21,9.15,8.86) #genome size
tenaillon_data=data.frame(t_line,t_g)
#model as only one effect -- line. here as random. fixed better?
t1 = lmer(tenaillon_data$t_g ~ 1|tenaillon_data$t_line)
t1_line = unlist(VarCorr(t1))[[1]];
t1_res=attr(VarCorr(t1), "sc")^2
t1_res
tenaillon_data
summary(t1_line)
summary(t1)
